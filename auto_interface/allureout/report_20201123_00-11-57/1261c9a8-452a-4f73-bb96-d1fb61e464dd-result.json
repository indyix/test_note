{"name": "test_trance_success[test_info0]", "status": "failed", "statusDetails": {"message": "AssertionError: assert 400 == 200\n +  where 400 = <Response [400]>.status_code", "trace": "self = <tests.test_today-transaction.TestTrans object at 0x0000024E781650D0>\ntest_info = {'case_id': 1, 'check_sql': None, 'data': '{\"to_date\":\"2020-11-14\",\"data_type\":0}', 'expected_data': '{\"success\":false}', ...}\nhandler = <middleware.handler.Handler object at 0x0000024E7818CC40>\neasy_session = <requests.sessions.Session object at 0x0000024E7818CE80>\nlogger = <common.logging_handler.Logger object at 0x0000024E77DA3C70>\n\n    @pytest.mark.success122\n    @pytest.mark.parametrize(\"test_info\", test_data)\n    def test_trance_success(self, test_info, handler, easy_session, logger):\n        print(\"\")\n        logger.info(\"执行用例{}\".format(test_info[\"case_id\"]))\n    \n        # 处理数据\n        data = json.loads(test_info[\"data\"])\n        url = handler.p2u(test_info[\"interface\"])\n        expected_data = json.loads(test_info[\"expected_data\"])\n        expected_status = test_info[\"expected_status\"]\n        method = test_info[\"method\"]\n    \n        # 请求\n        if method.lower() == \"get\".lower():\n            res = easy_session.request(url=url, params=data, method=method)\n        else:\n            res = easy_session.request(url=url, data=data, method=method)\n    \n            # 断言\n        try:\n            assert res.status_code == 200\n        except Exception as e:\n            logger.error(\"状态码错误\")\n>           raise e\n\ntests\\test_today-transaction.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <tests.test_today-transaction.TestTrans object at 0x0000024E781650D0>\ntest_info = {'case_id': 1, 'check_sql': None, 'data': '{\"to_date\":\"2020-11-14\",\"data_type\":0}', 'expected_data': '{\"success\":false}', ...}\nhandler = <middleware.handler.Handler object at 0x0000024E7818CC40>\neasy_session = <requests.sessions.Session object at 0x0000024E7818CE80>\nlogger = <common.logging_handler.Logger object at 0x0000024E77DA3C70>\n\n    @pytest.mark.success122\n    @pytest.mark.parametrize(\"test_info\", test_data)\n    def test_trance_success(self, test_info, handler, easy_session, logger):\n        print(\"\")\n        logger.info(\"执行用例{}\".format(test_info[\"case_id\"]))\n    \n        # 处理数据\n        data = json.loads(test_info[\"data\"])\n        url = handler.p2u(test_info[\"interface\"])\n        expected_data = json.loads(test_info[\"expected_data\"])\n        expected_status = test_info[\"expected_status\"]\n        method = test_info[\"method\"]\n    \n        # 请求\n        if method.lower() == \"get\".lower():\n            res = easy_session.request(url=url, params=data, method=method)\n        else:\n            res = easy_session.request(url=url, data=data, method=method)\n    \n            # 断言\n        try:\n>           assert res.status_code == 200\nE           assert 400 == 200\nE            +  where 400 = <Response [400]>.status_code\n\ntests\\test_today-transaction.py:39: AssertionError"}, "attachments": [{"name": "log", "source": "9a32691c-5de9-46b2-a0e9-2057ecfb1733-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "test_info", "value": "{'case_id': 1, 'interface': '/api/easy/data-center/today_transaction/get', 'title': '起始时间必填', 'method': 'get', 'url': None, 'data': '{\"to_date\":\"2020-11-14\",\"data_type\":0}', 'headers': None, 'expected_status': 400, 'expected_data': '{\"success\":false}', 'result': None, 'check_sql': None}"}], "start": 1606061521696, "stop": 1606061526244, "uuid": "269daa95-7b43-42a7-98f0-01dff047bf22", "historyId": "02242797caa214de7e6d13c6c6319f0f", "testCaseId": "4466601d933841408b80dbcbf868909a", "fullName": "tests.test_today-transaction.TestTrans#test_trance_success", "labels": [{"name": "tag", "value": "success122"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_today-transaction"}, {"name": "subSuite", "value": "TestTrans"}, {"name": "host", "value": "DESKTOP-TEJKIFQ"}, {"name": "thread", "value": "5740-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_today-transaction"}]}